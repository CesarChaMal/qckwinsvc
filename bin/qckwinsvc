#! /usr/bin/env node

var prompt = require('prompt')
var cli = require('optimist')
  .usage('Usage: $0\n       $0 --uninstall')
  .describe('name', 'Windows service name to install/uninstall (don\'t confuse with the display name')
  .describe('description', 'Service description')
  .describe('command', 'The command to be installed as a service')

var argv = cli.argv

function showHelp () {
  cli.showHelp()
  process.exit()
}

if (argv.h || argv.help) showHelp()
if (argv.uninstall) {
  readName(function (name) {
    //TODO uninstall service
    console.log()
    console.log('read name: ' + name)
  })
} else {
  readName(function (name) {
    readDescription(function (description) {
      readCommand(function (command) {
        //TODO install service
        console.log()
        console.log('read name: ' + name)
        console.log('read description: ' + description)
        console.log('read command: ' + command)
      })
    })
  })
}

function readName (callback) {
  if (argv.name) process.nextTick(function () { callback(argv.name) })
  prompt.get(
    {
      name: 'name',
      description: 'Service name',
      required: true,
      pattern: /^[a-zA-Z\-]+$/
    },
    function (err, result) {
      if (err) throw err
      else callback(result.name)
    }
  )
}

function readDescription (callback) {
  if (argv.description) process.nextTick(function () { callback(null, argv.description) })
  prompt.get(
    {
      name: 'description',
      description: 'Service description'
    },
    function (err, result) {
      if (err) throw err
      else callback(result.description)
    }
  )
}

function readCommand (callback) {
  if (argv.name) process.nextTick(function () { callback(null, argv.name) })
  prompt.get(
    {
      name: 'command',
      description: 'Service command',
      required: true
    },
    function (err, result) {
      if (err) throw err
      else callback(result.command)
    }
  )
}

